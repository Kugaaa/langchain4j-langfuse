/*
 * langfuse
 * ## Authentication  Authenticate with the API using [Basic Auth](https://en.wikipedia.org/wiki/Basic_access_authentication), get API keys in the project settings:  - username: Langfuse Public Key - password: Langfuse Secret Key  ## Exports  - OpenAPI spec: https://cloud.langfuse.com/generated/api/openapi.yml - Postman collection: https://cloud.langfuse.com/generated/postman/collection.json
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.kuga.langfuse.client.api;

import com.kuga.langfuse.client.invoker.ApiException;
import com.kuga.langfuse.client.model.CreateScoreRequest;
import com.kuga.langfuse.client.model.CreateScoreResponse;
import java.time.OffsetDateTime;
import com.kuga.langfuse.client.model.Score;
import com.kuga.langfuse.client.model.ScoreDataType;
import com.kuga.langfuse.client.model.ScoreSource;
import com.kuga.langfuse.client.model.Scores;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ScoreApi
 */
@Disabled
public class ScoreApiTest {

    private final ScoreApi api = new ScoreApi();

    /**
     * Create a score
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreCreateTest() throws ApiException {
        CreateScoreRequest createScoreRequest = null;
        CreateScoreResponse response = api.scoreCreate(createScoreRequest);
        // TODO: test validations
    }

    /**
     * Delete a score
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreDeleteTest() throws ApiException {
        String scoreId = null;
        api.scoreDelete(scoreId);
        // TODO: test validations
    }

    /**
     * Get a list of scores
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreGetTest() throws ApiException {
        Integer page = null;
        Integer limit = null;
        String userId = null;
        String name = null;
        OffsetDateTime fromTimestamp = null;
        OffsetDateTime toTimestamp = null;
        ScoreSource source = null;
        String operator = null;
        Double value = null;
        String scoreIds = null;
        String configId = null;
        ScoreDataType dataType = null;
        Scores response = api.scoreGet(page, limit, userId, name, fromTimestamp, toTimestamp, source, operator, value, scoreIds, configId, dataType);
        // TODO: test validations
    }

    /**
     * Get a score
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scoreGetByIdTest() throws ApiException {
        String scoreId = null;
        Score response = api.scoreGetById(scoreId);
        // TODO: test validations
    }

}
